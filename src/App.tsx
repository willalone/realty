import { useState, useMemo, useEffect } from 'react';
import '../styles.css';
import dom101Image from './img/dom-101.webp';
import narodnyeKvartalyImage from './img/narodnye-kvartaly.webp';
import istoriya2Image from './img/istoriya-2.webp';

type ModalId = 'promo1' | 'promo2' | 'promo3' | 'state' | 'family' | 'consultation' | 'dom101' | 'narodnye' | 'istoriya2' | 'military';

function App() {
  const [modal, setModal] = useState<ModalId | null>(null);
  const [toast, setToast] = useState<string | null>(null);
  const [bookingOpen, setBookingOpen] = useState(false);
  const [activeSection, setActiveSection] = useState<string>('');
  const [showScrollTop, setShowScrollTop] = useState(false);

  const onOpen = (id: ModalId) => setModal(id);
  const onClose = () => setModal(null);
  const showToast = (message: string) => {
    setToast(message);
    setTimeout(() => setToast(null), 3000);
  };

  // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ–∫—Ü–∏–∏ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
  useEffect(() => {
    const sections = ['promos', 'projects', 'mortgage'];
    
    const handleScroll = () => {
      const scrollPosition = window.scrollY + 100;
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–≤–µ—Ä—Ö" –ø–æ—Å–ª–µ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –Ω–∞ 300px
      setShowScrollTop(window.scrollY > 300);
      
      for (const sectionId of sections) {
        const element = document.getElementById(sectionId);
        if (element) {
          const { offsetTop, offsetHeight } = element;
          if (scrollPosition >= offsetTop && scrollPosition < offsetTop + offsetHeight) {
            setActiveSection(sectionId);
            break;
          }
        }
      }
    };

    window.addEventListener('scroll', handleScroll);
    handleScroll(); // –í—ã–∑—ã–≤–∞–µ–º —Å—Ä–∞–∑—É –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è

    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  const formatRuPhone = (value: string) => {
    const digits = value.replace(/\D/g, '');
    if (digits.length === 0) return '';
    if (digits.length <= 1) return `+7(${digits}`;
    if (digits.length <= 4) return `+7(${digits.slice(1)}`;
    if (digits.length <= 7) return `+7(${digits.slice(1, 4)})-${digits.slice(4)}`;
    if (digits.length <= 9) return `+7(${digits.slice(1, 4)})-${digits.slice(4, 7)}-${digits.slice(7)}`;
    return `+7(${digits.slice(1, 4)})-${digits.slice(4, 7)}-${digits.slice(7, 9)}-${digits.slice(9, 11)}`;
  };

  const PHONE_RE = /^\+7\(\d{3}\)-\d{3}-\d{2}-\d{2}$/;

  const sendToTelegram = async (data: any) => {
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è GitHub Pages
    const BOT_TOKEN = import.meta.env.VITE_TELEGRAM_BOT_TOKEN || 'YOUR_BOT_TOKEN_HERE';
    const CHAT_ID = import.meta.env.VITE_TELEGRAM_CHAT_ID || 'YOUR_CHAT_ID_2_HERE';
    
    console.log('üîß –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ –±–æ—Ç–∞:', { BOT_TOKEN: BOT_TOKEN ? '***' : 'undefined', CHAT_ID });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –∑–∞–¥–∞–Ω—ã
    if (!BOT_TOKEN || !CHAT_ID) {
      console.error('‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –¥–ª—è Telegram –±–æ—Ç–∞');
      return false;
    }

    const message = `
üè† **–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞**

üìã **–¢–∏–ø —Ñ–æ—Ä–º—ã:** ${data.formType}
üë§ **–ò–º—è:** ${data.name}
üìû **–¢–µ–ª–µ—Ñ–æ–Ω:** ${data.phone}
‚è∞ **–í—Ä–µ–º—è:** ${new Date().toLocaleString('ru-RU')}

üåê **–ò—Å—Ç–æ—á–Ω–∏–∫:** –ó–∞—Å—Ç—Ä–æ–π—â–∏–∫ NPM
    `;

    try {
      console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram:', { BOT_TOKEN, CHAT_ID, message });
      
      // –°–æ–∑–¥–∞–µ–º AbortController –¥–ª—è —Ç–∞–π–º–∞—É—Ç–∞
      const controller = new AbortController();
      const timeoutId = setTimeout(() => controller.abort(), 15000); // 15 —Å–µ–∫—É–Ω–¥

      try {
        const response = await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            chat_id: CHAT_ID,
            text: message,
            parse_mode: 'Markdown'
          }),
          signal: controller.signal
        });
        
        clearTimeout(timeoutId);
        
        const responseData = await response.json();
        console.log('üì§ –û—Ç–≤–µ—Ç –æ—Ç Telegram API:', responseData);
        console.log('üìä HTTP —Å—Ç–∞—Ç—É—Å:', response.status);
        console.log('üìä Response OK:', response.ok);
        console.log('üìä Data OK:', responseData.ok);

        // –ë–æ–ª–µ–µ –º—è–≥–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–æ—Å—å, —Å—á–∏—Ç–∞–µ–º —É—Å–ø–µ—Ö–æ–º
        if (response.ok && responseData.ok) {
          console.log('‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram');
          return true;
        } else {
          console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:', responseData);
          
          // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
          if (responseData.error_code === 403) {
            console.error('–ë–æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∏–ª–∏ –Ω–µ –∑–∞–ø—É—â–µ–Ω');
          } else if (responseData.error_code === 400) {
            console.error('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π Chat ID –∏–ª–∏ –¥—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã');
          }
          
          // –î–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ API, –µ—Å–ª–∏ HTTP —Å—Ç–∞—Ç—É—Å 200, —Å—á–∏—Ç–∞–µ–º —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –º–æ–≥–ª–æ –¥–æ–π—Ç–∏
          if (response.ok) {
            console.log('‚ö†Ô∏è HTTP —Å—Ç–∞—Ç—É—Å OK, –Ω–æ API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É. –í–æ–∑–º–æ–∂–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ—à–ª–æ.');
            return true; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º true, —Ç–∞–∫ –∫–∞–∫ HTTP –∑–∞–ø—Ä–æ—Å –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ
          }
          
          return false;
        }
      } catch (fetchError: any) {
        clearTimeout(timeoutId);
        if (fetchError.name === 'AbortError') {
          console.error('‚ùå –¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞ –∫ Telegram API');
          return false;
        }
        console.error('‚ùå –°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞:', fetchError);
        return false;
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞:', error);
      return false;
    }
  };

  // –¢–µ—Å—Ç–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Telegram –±–æ—Ç–∞
  const testTelegramBot = async () => {
    const BOT_TOKEN = import.meta.env.VITE_TELEGRAM_BOT_TOKEN;
    const CHAT_ID = import.meta.env.VITE_TELEGRAM_CHAT_ID;
    
    if (!BOT_TOKEN || !CHAT_ID) {
      console.error('‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Telegram –±–æ—Ç–∞');
      alert('‚ùå –°–Ω–∞—á–∞–ª–∞ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ —Ñ–∞–π–ª–µ .env');
      return false;
    }
    
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram –±–æ—Ç–∞...');
    
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–æ—Ç–∞
      const botInfoResponse = await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/getMe`);
      const botInfo = await botInfoResponse.json();
      console.log('‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:', botInfo);
      
      if (!botInfo.ok) {
        console.error('‚ùå –ë–æ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —Ç–æ–∫–µ–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π');
        return false;
      }
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      const testMessage = 'üß™ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Å–∞–π—Ç–∞';
      const response = await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          chat_id: CHAT_ID,
          text: testMessage
        })
      });
      
      const responseData = await response.json();
      console.log('üì§ –û—Ç–≤–µ—Ç –æ—Ç Telegram:', responseData);
      
      if (response.ok && responseData.ok) {
        console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
        alert('‚úÖ –¢–µ—Å—Ç —É—Å–ø–µ—à–µ–Ω! –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.');
        return true;
      } else {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', responseData);
        alert('‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞.');
        return false;
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞:', error);
      return false;
    }
  };
  
  // –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏
  (window as any).testTelegramBot = testTelegramBot;
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–æ—Ä–º—ã –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
  (window as any).testConsultationForm = async () => {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–æ—Ä–º—É –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏...');
    
    const testData = {
      formType: 'consultation',
      name: 'Test User',
      phone: '+7(999)-123-45-67'
    };
    
    try {
      const result = await sendToTelegram(testData);
      console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞ —Ñ–æ—Ä–º—ã –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏:', result);
      
      if (result) {
        alert('‚úÖ –¢–µ—Å—Ç —Ñ–æ—Ä–º—ã –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ —É—Å–ø–µ—à–µ–Ω!');
      } else {
        alert('‚ùå –¢–µ—Å—Ç —Ñ–æ—Ä–º—ã –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –Ω–µ –ø—Ä–æ—à–µ–ª');
      }
      
      return result;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ —Ñ–æ—Ä–º—ã –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏:', error);
      alert('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ —Ñ–æ—Ä–º—ã –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏');
      return false;
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ Telegram API
  (window as any).debugTelegramAPI = async () => {
    const BOT_TOKEN = import.meta.env.VITE_TELEGRAM_BOT_TOKEN;
    const CHAT_ID = import.meta.env.VITE_TELEGRAM_CHAT_ID;
    
    if (!BOT_TOKEN || !CHAT_ID) {
      console.error('‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Telegram –±–æ—Ç–∞');
      alert('‚ùå –°–Ω–∞—á–∞–ª–∞ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ —Ñ–∞–π–ª–µ .env');
      return;
    }
    
    console.log('üîç –î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Telegram API...');
    
    try {
      // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
      console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ...');
      const botResponse = await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/getMe`);
      const botData = await botResponse.json();
      console.log('ü§ñ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:', botData);
      
      // 2. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      console.log('2Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...');
      const messageResponse = await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          chat_id: CHAT_ID,
          text: 'üß™ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏',
          parse_mode: 'Markdown'
        })
      });
      
      const messageData = await messageResponse.json();
      console.log('üì§ –û—Ç–≤–µ—Ç –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è:', messageData);
      console.log('üìä HTTP —Å—Ç–∞—Ç—É—Å:', messageResponse.status);
      console.log('üìä Response OK:', messageResponse.ok);
      console.log('üìä Data OK:', messageData.ok);
      
      // 3. –†–µ–∑—É–ª—å—Ç–∞—Ç
      if (messageResponse.ok && messageData.ok) {
        console.log('‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
        alert('‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ! –í—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.');
      } else {
        console.log('‚ùå –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –≤—ã—è–≤–∏–ª–∞ –ø—Ä–æ–±–ª–µ–º—ã');
        alert('‚ùå –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –≤—ã—è–≤–∏–ª–∞ –ø—Ä–æ–±–ª–µ–º—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –¥–µ—Ç–∞–ª–µ–π.');
      }
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error);
      alert('‚ùå –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.');
    }
  };

  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>, formType: string) => {
    e.preventDefault();
    const formData = new FormData(e.currentTarget);
    const data = Object.fromEntries(formData.entries());
    
    // Validate name - only letters
    const nameRegex = /^[a-zA-Z–∞-—è–ê-–Ø—ë–Å\s\-']+$/;
    if (!nameRegex.test((data.name as string).trim())) {
      showToast('–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã');
      return;
    }

    if ((data.name as string).trim().length < 2) {
      showToast('–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞');
      return;
    }
    
    if (!PHONE_RE.test(data.phone as string)) {
      showToast('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞');
      return;
    }

    try {
      console.log('üìã –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏:', { ...data, formType });
      
      // –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ Telegram
      const telegramSent = await sendToTelegram({ ...data, formType });
      
      console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:', telegramSent);
      
      if (telegramSent) {
        showToast('‚úÖ –°–ø–∞—Å–∏–±–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.');
        console.log('‚úÖ –§–æ—Ä–º–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞');
      } else {
        console.warn('‚ö†Ô∏è Telegram API –≤–µ—Ä–Ω—É–ª false, –Ω–æ —ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—Ä–µ–º–µ–Ω–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞');
        showToast('‚ö†Ô∏è –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞, –Ω–æ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º. –ú—ã –ø–æ–ª—É—á–∏–º –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏.');
        console.log('‚ö†Ô∏è –§–æ—Ä–º–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º');
      }
      
      e.currentTarget.reset();
      onClose();
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º—ã –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏:', error);
      showToast('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    }
  };

  return (
    <>
      <Header onOpen={onOpen} activeSection={activeSection} />
      <Hero onOpen={onOpen} bookingOpen={bookingOpen} setBookingOpen={setBookingOpen} />
      <Promos onOpen={onOpen} />
      <Projects onOpen={onOpen} />
      <Mortgage onOpen={onOpen} />
      <Footer onOpen={onOpen} />
      <Modal modal={modal} onClose={onClose} onSubmit={handleSubmit} formatRuPhone={formatRuPhone} />
      <Toast message={toast} />
      {showScrollTop && (
        <button 
          className="scroll-top"
          onClick={() => window.scrollTo({ top: 0, behavior: 'smooth' })}
          aria-label="–ù–∞–≤–µ—Ä—Ö"
        >
          ‚Üë
        </button>
      )}
    </>
  );
}

function Header({ onOpen, activeSection }: { onOpen: (id: ModalId) => void; activeSection: string }) {
  return (
    <header className="site-header">
      <div className="container">
        <div className="header-inner">
          <div className="logo">
            <span className="logo-mark">V</span>
          </div>
          <nav className="nav">
            <a 
              href="#projects" 
              className={activeSection === 'projects' ? 'active' : ''}
              onClick={(e) => {
                e.preventDefault();
                document.getElementById('projects')?.scrollIntoView({ behavior: 'smooth' });
              }}
            >
              –ü—Ä–æ–µ–∫—Ç—ã
            </a>
            <a 
              href="#mortgage" 
              className={activeSection === 'mortgage' ? 'active' : ''}
              onClick={(e) => {
                e.preventDefault();
                document.getElementById('mortgage')?.scrollIntoView({ behavior: 'smooth' });
              }}
            >
              –ò–ø–æ—Ç–µ–∫–∞
            </a>
            <a 
              href="#promos" 
              className={activeSection === 'promos' ? 'active' : ''}
              onClick={(e) => {
                e.preventDefault();
                document.getElementById('promos')?.scrollIntoView({ behavior: 'smooth' });
              }}
            >
              –ê–∫—Ü–∏–∏
            </a>
            <a href="#consultation" onClick={() => onOpen('consultation')}>–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è</a>
          </nav>
          <div className="header-actions">
            <a href="tel:+79884707893" className="phone">+7(988)-470-78-93</a>
            <button className="btn btn-primary" onClick={() => onOpen('consultation')}>–û–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫</button>
          </div>
        </div>
      </div>
    </header>
  );
}

function Hero({ onOpen, bookingOpen, setBookingOpen }: { onOpen: (id: ModalId) => void; bookingOpen: boolean; setBookingOpen: (open: boolean) => void }) {
  const scrollToBooking = () => {
    const bookingSection = document.getElementById('booking-section');
    if (bookingSection) {
      bookingSection.scrollIntoView({ behavior: 'smooth' });
    }
  };

  return (
    <section className="hero">
      <div className="container hero-inner">
        <div className="hero-content">
          <h1>–ó–∞—Å—Ç—Ä–æ–π—â–∏–∫ NPM ‚Äî —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏</h1>
          <p>–û—Ç –¥–µ—Ç—Å–∫–∏—Ö —Å–∞–¥–æ–≤ –∏ —à–∫–æ–ª –¥–æ —Ñ–∏—Ç–Ω–µ—Å–∞ –∏ –ø—Ä–æ–≥—É–ª–æ—á–Ω—ã—Ö –∞–ª–ª–µ–π: –∂–∏–ª—ã–µ –∫–≤–∞—Ä—Ç–∞–ª—ã —Å —Ä–∞–∑–≤–∏—Ç–æ–π –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π</p>
          <div className="hero-cta">
            <button 
              className="btn btn-primary btn-large" 
              onClick={() => {
                setBookingOpen(!bookingOpen);
                if (!bookingOpen) {
                  setTimeout(scrollToBooking, 100);
                }
              }}
            >
              –°–º–æ—Ç—Ä–µ—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—ã
            </button>
          </div>
        </div>
        {bookingOpen && (
          <div id="booking-section" className="booking-section">
            <BookingForm onOpen={onOpen} />
          </div>
        )}
      </div>
    </section>
  );
}

function BookingForm({ onOpen }: { onOpen: (id: ModalId) => void }) {
  const [selectedDate, setSelectedDate] = useState<Date | null>(null);
  const [selectedTime, setSelectedTime] = useState<string | null>(null);
  const [bookedSlots, setBookedSlots] = useState<Set<string>>(new Set());

    const sendToTelegram = async (data: any) => {
      // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è GitHub Pages
      const BOT_TOKEN = import.meta.env.VITE_TELEGRAM_BOT_TOKEN || 'YOUR_BOT_TOKEN_HERE';
      const CHAT_ID = import.meta.env.VITE_TELEGRAM_CHAT_ID || 'YOUR_CHAT_ID_HERE';
      
      console.log('üîß BookingForm: –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ –±–æ—Ç–∞:', { BOT_TOKEN: BOT_TOKEN ? '***' : 'undefined', CHAT_ID });
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –∑–∞–¥–∞–Ω—ã
      if (!BOT_TOKEN || !CHAT_ID) {
        console.error('‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –¥–ª—è Telegram –±–æ—Ç–∞');
        return false;
      }

    const message = `
üè† **–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞**

üìã **–¢–∏–ø —Ñ–æ—Ä–º—ã:** ${data.formType}
üë§ **–ò–º—è:** ${data.name}
üìû **–¢–µ–ª–µ—Ñ–æ–Ω:** ${data.phone}
üìÖ **–î–∞—Ç–∞:** ${data.date}
‚è∞ **–í—Ä–µ–º—è:** ${data.time}
üïê **–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏:** ${new Date().toLocaleString('ru-RU')}

üåê **–ò—Å—Ç–æ—á–Ω–∏–∫:** –ó–∞—Å—Ç—Ä–æ–π—â–∏–∫ NPM
    `;

    try {
      // –°–æ–∑–¥–∞–µ–º AbortController –¥–ª—è —Ç–∞–π–º–∞—É—Ç–∞
      const controller = new AbortController();
      const timeoutId = setTimeout(() => controller.abort(), 10000); // 10 —Å–µ–∫—É–Ω–¥

      try {
        const response = await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            chat_id: CHAT_ID,
            text: message,
            parse_mode: 'Markdown'
          }),
          signal: controller.signal
        });
        
        clearTimeout(timeoutId);
        
        const responseData = await response.json();
        console.log('–û—Ç–≤–µ—Ç –æ—Ç Telegram API:', responseData);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É –æ—Ç–≤–µ—Ç–∞
        if (response.ok && responseData.ok) {
          console.log('‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram');
          return true;
        } else {
          console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:', responseData);
          return false;
        }
      } catch (fetchError: any) {
        clearTimeout(timeoutId);
        if (fetchError.name === 'AbortError') {
          console.error('‚ùå –¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞ –∫ Telegram API');
          return false;
        }
        throw fetchError;
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞:', error);
      return false;
    }
  };

  const today = new Date();
  const currentMonth = new Date(today.getFullYear(), today.getMonth(), 1);
  const [displayMonth, setDisplayMonth] = useState(currentMonth);

  const getDaysInMonth = (date: Date) => {
    const year = date.getFullYear();
    const month = date.getMonth();
    const firstDay = new Date(year, month, 1);
    const lastDay = new Date(year, month + 1, 0);
    const daysInMonth = lastDay.getDate();
    const startingDayOfWeek = firstDay.getDay();

    const days = [];
    for (let i = 0; i < startingDayOfWeek; i++) {
      days.push(null);
    }
    for (let i = 1; i <= daysInMonth; i++) {
      days.push(new Date(year, month, i));
    }
    return days;
  };

  const isDateDisabled = (date: Date) => {
    const day = date.getDay();
    return day === 0 || day === 6 || date < today;
  };

  const isDateBooked = (date: Date) => {
    const dateStr = date.toISOString().split('T')[0];
    return Array.from(bookedSlots).some(slot => slot.startsWith(dateStr));
  };

  const isTimeSlotBooked = (time: string) => {
    if (!selectedDate) return false;
    const slotKey = `${selectedDate.toISOString().split('T')[0]}_${time}`;
    return bookedSlots.has(slotKey);
  };

  const hasAvailableSlots = (date: Date) => {
    const dateStr = date.toISOString().split('T')[0];
    const bookedSlotsForDate = Array.from(bookedSlots).filter(slot => slot.startsWith(dateStr));
    return bookedSlotsForDate.length > 0 && bookedSlotsForDate.length < timeSlots.length;
  };

  const getAvailableSlotsCount = (date: Date) => {
    const dateStr = date.toISOString().split('T')[0];
    const bookedSlotsForDate = Array.from(bookedSlots).filter(slot => slot.startsWith(dateStr));
    return timeSlots.length - bookedSlotsForDate.length;
  };

  const timeSlots = [
    '09:00', '10:00', '11:00', '12:00', '14:00', '15:00', '16:00', '17:00'
  ];

  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    const formData = new FormData(e.currentTarget);
    const data = Object.fromEntries(formData.entries());
    
    if (!selectedDate || !selectedTime) {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è');
      return;
    }

    // Validate name - only letters
    const nameRegex = /^[a-zA-Z–∞-—è–ê-–Ø—ë–Å\s\-']+$/;
    if (!nameRegex.test((data.name as string).trim())) {
      alert('–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã');
      return;
    }

    if ((data.name as string).trim().length < 2) {
      alert('–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞');
      return;
    }

    if (!PHONE_RE.test(data.phone as string)) {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞');
      return;
    }

    try {
      // –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≤ Telegram
      const bookingData = {
        ...data,
        formType: 'booking',
        date: selectedDate.toISOString().split('T')[0],
        time: selectedTime
      };
      
      const telegramSent = await sendToTelegram(bookingData);
      
      if (telegramSent) {
        // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ª–æ—Ç
        const slotKey = `${selectedDate.toISOString().split('T')[0]}_${selectedTime}`;
        setBookedSlots(prev => new Set([...prev, slotKey]));
        
        alert('‚úÖ –ó–∞–ø–∏—Å—å –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.');
      } else {
        console.warn('‚ö†Ô∏è Telegram API –≤–µ—Ä–Ω—É–ª false, –Ω–æ —ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—Ä–µ–º–µ–Ω–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞');
        // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª–æ—Ç –¥–∞–∂–µ –µ—Å–ª–∏ API –≤–µ—Ä–Ω—É–ª false, —Ç–∞–∫ –∫–∞–∫ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –¥–æ—à–ª–æ
        const slotKey = `${selectedDate.toISOString().split('T')[0]}_${selectedTime}`;
        setBookedSlots(prev => new Set([...prev, slotKey]));
        
        alert('‚ö†Ô∏è –ó–∞–ø–∏—Å—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞, –Ω–æ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º. –ú—ã –ø–æ–ª—É—á–∏–º –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏.');
      }
      
      e.currentTarget.reset();
      setSelectedDate(null);
      setSelectedTime(null);
    } catch (error) {
      alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    }
  };

  const formatRuPhone = (value: string) => {
    const digits = value.replace(/\D/g, '');
    if (digits.length === 0) return '';
    if (digits.length <= 1) return `+7(${digits}`;
    if (digits.length <= 4) return `+7(${digits.slice(1)}`;
    if (digits.length <= 7) return `+7(${digits.slice(1, 4)})-${digits.slice(4)}`;
    if (digits.length <= 9) return `+7(${digits.slice(1, 4)})-${digits.slice(4, 7)}-${digits.slice(7)}`;
    return `+7(${digits.slice(1, 4)})-${digits.slice(4, 7)}-${digits.slice(7, 9)}-${digits.slice(9, 11)}`;
  };

  const PHONE_RE = /^\+7\(\d{3}\)-\d{3}-\d{2}-\d{2}$/;

  const monthNames = [
    '–Ø–Ω–≤–∞—Ä—å', '–§–µ–≤—Ä–∞–ª—å', '–ú–∞—Ä—Ç', '–ê–ø—Ä–µ–ª—å', '–ú–∞–π', '–ò—é–Ω—å',
    '–ò—é–ª—å', '–ê–≤–≥—É—Å—Ç', '–°–µ–Ω—Ç—è–±—Ä—å', '–û–∫—Ç—è–±—Ä—å', '–ù–æ—è–±—Ä—å', '–î–µ–∫–∞–±—Ä—å'
  ];

  const weekDays = ['–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±', '–í—Å'];

  const days = getDaysInMonth(displayMonth);

  return (
    <div className="booking-form">
      <div className="booking-header">
        <h3>–ó–∞–ø–∏—Å—å –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä</h3>
        <p>–í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–≤–∞—Ä—Ç–∏—Ä</p>
      </div>
      
      <form onSubmit={handleSubmit} className="booking-content">
        <div className="booking-grid">
          <div className="calendar-section">
            <div className="calendar-header">
              <button 
                type="button" 
                onClick={() => setDisplayMonth(new Date(displayMonth.getFullYear(), displayMonth.getMonth() - 1))}
              >
                ‚Äπ
              </button>
              <h4>{monthNames[displayMonth.getMonth()]} {displayMonth.getFullYear()}</h4>
              <button 
                type="button" 
                onClick={() => setDisplayMonth(new Date(displayMonth.getFullYear(), displayMonth.getMonth() + 1))}
              >
                ‚Ä∫
              </button>
            </div>
            
            <div className="calendar-weekdays">
              {weekDays.map(day => (
                <div key={day} className="weekday">{day}</div>
              ))}
            </div>
            
            <div style={{ marginBottom: '12px', fontSize: '12px', color: 'var(--muted)' }}>
              <div style={{ display: 'flex', gap: '12px', flexWrap: 'wrap', justifyContent: 'center' }}>
                <div style={{ display: 'flex', alignItems: 'center', gap: '4px' }}>
                  <div style={{ width: '12px', height: '12px', background: '#4f7cff', borderRadius: '2px' }}></div>
                  <span>–°–≤–æ–±–æ–¥–Ω–æ</span>
                </div>
                <div style={{ display: 'flex', alignItems: 'center', gap: '4px' }}>
                  <div style={{ width: '12px', height: '12px', background: 'linear-gradient(135deg, #ff6b6b, #4f7cff)', borderRadius: '2px' }}></div>
                  <span>–ß–∞—Å—Ç–∏—á–Ω–æ –∑–∞–Ω—è—Ç–æ</span>
                </div>
                <div style={{ display: 'flex', alignItems: 'center', gap: '4px' }}>
                  <div style={{ width: '12px', height: '12px', background: '#ff6b6b', borderRadius: '2px' }}></div>
                  <span>–ü–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–Ω—è—Ç–æ</span>
                </div>
              </div>
            </div>
            <div className="calendar-grid">
              {days.map((date, index) => (
                <button
                  key={index}
                  type="button"
                  className={`calendar-cell ${date && selectedDate?.toDateString() === date.toDateString() ? 'selected' : ''} ${date && isDateDisabled(date) ? 'disabled' : ''} ${date && isDateBooked(date) && !hasAvailableSlots(date) ? 'booked' : ''} ${date && hasAvailableSlots(date) ? 'partially-booked' : ''}`}
                  onClick={() => date && !isDateDisabled(date) && setSelectedDate(date)}
                  disabled={!date || isDateDisabled(date)}
                >
                  {date?.getDate()}
                  {date && isDateBooked(date) && !hasAvailableSlots(date) && (
                    <span style={{ position: 'absolute', top: '2px', right: '2px', fontSize: '10px' }}>‚ùå</span>
                  )}
                  {date && hasAvailableSlots(date) && (
                    <span style={{ 
                      position: 'absolute', 
                      bottom: '2px', 
                      right: '2px', 
                      fontSize: '8px',
                      background: '#4f7cff',
                      color: 'white',
                      borderRadius: '50%',
                      width: '16px',
                      height: '16px',
                      display: 'flex',
                      alignItems: 'center',
                      justifyContent: 'center'
                    }}>
                      {getAvailableSlotsCount(date)}
                    </span>
                  )}
                </button>
              ))}
            </div>
          </div>
          
          <div className="time-section">
            <h4>–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è</h4>
            {selectedDate && hasAvailableSlots(selectedDate) && (
              <div style={{
                background: 'linear-gradient(135deg, #4f7cff, #60a5fa)',
                color: 'white',
                padding: '8px 12px',
                borderRadius: '8px',
                marginBottom: '12px',
                fontSize: '14px',
                textAlign: 'center'
              }}>
                üìÖ –ù–∞ {selectedDate.toLocaleDateString('ru-RU')} –¥–æ—Å—Ç—É–ø–Ω–æ {getAvailableSlotsCount(selectedDate)} —Å–≤–æ–±–æ–¥–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤
              </div>
            )}
            <div className="time-grid">
              {timeSlots.map(time => (
                <button
                  key={time}
                  type="button"
                  className={`time-slot ${selectedTime === time ? 'selected' : ''} ${isTimeSlotBooked(time) ? 'booked' : ''}`}
                  onClick={() => !isTimeSlotBooked(time) && setSelectedTime(time)}
                  disabled={isTimeSlotBooked(time)}
                >
                  {time}
                  {isTimeSlotBooked(time) && <span style={{ position: 'absolute', top: '2px', right: '2px', fontSize: '10px' }}>‚ùå</span>}
                </button>
              ))}
            </div>
          </div>
        </div>
        
        <div className="booking-form-fields">
          <input
            type="text"
            name="name"
            placeholder="–í–∞—à–µ –∏–º—è"
            required
            className="form-input"
            onChange={(e) => {
              e.target.value = formatName(e.target.value);
            }}
          />
          <input
            type="tel"
            name="phone"
            placeholder="+7(___)___-__-__"
            required
            className="form-input"
            onChange={(e) => {
              e.target.value = formatRuPhone(e.target.value);
            }}
          />
          <button type="submit" className="btn btn-primary btn-large">
            –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä
          </button>
        </div>
      </form>
    </div>
  );
}

function Promos({ onOpen }: { onOpen: (id: ModalId) => void }) {
  return (
    <section id="promos" className="section promos">
      <div className="container">
        <h2>–ê–∫—Ü–∏–∏</h2>
        <div className="cards grid-3">
          <article className="card">
            <h3>–†–µ–º–æ–Ω—Ç –≤ –ø–æ–¥–∞—Ä–æ–∫ ‚Äî –≤ ¬´–ù–∞—Ä–æ–¥–Ω—ã—Ö –∫–≤–∞—Ä—Ç–∞–ª–∞—Ö¬ª!</h3>
            <p>–†–µ–º–æ–Ω—Ç –≤ –ø–æ–¥–∞—Ä–æ–∫ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ –°–ö –ù–í–ú!</p>
            <button className="btn btn-link" onClick={() => onOpen('promo1')}>–ü–æ–¥—Ä–æ–±–Ω–µ–µ</button>
          </article>
          <article className="card">
            <h3>–†–µ–º–æ–Ω—Ç + –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞ –º–µ–±–µ–ª—å –≤ –ø–æ–¥–∞—Ä–æ–∫</h3>
            <p>–û—Ç–¥–µ–ª–∫–∞ –ø–æ–¥ –∫–ª—é—á ‚Äî –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Ö–ª–æ–ø–æ—Ç</p>
            <button className="btn btn-link" onClick={() => onOpen('promo2')}>–ü–æ–¥—Ä–æ–±–Ω–µ–µ</button>
          </article>
          <article className="card">
            <h3>–°–µ–º–µ–π–Ω–∞—è –∏–ø–æ—Ç–µ–∫–∞</h3>
            <p>–°–µ–º–µ–π–Ω–∞—è –∏–ø–æ—Ç–µ–∫–∞ –∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã –≥–æ—Å–ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Å –≤—ã–≥–æ–¥–æ–π.</p>
            <button className="btn btn-link" onClick={() => onOpen('promo3')}>–ü–æ–¥—Ä–æ–±–Ω–µ–µ</button>
          </article>
        </div>
      </div>
    </section>
  );
}

function Projects({ onOpen }: { onOpen: (id: ModalId) => void }) {
  return (
    <section id="projects" className="section projects">
      <div className="container">
        <div className="section-head">
          <h2>–í—ã–±–µ—Ä–∏—Ç–µ –∫–≤–∞—Ä—Ç–∏—Ä—É</h2>
        </div>
        <div className="cards grid-3">
          <article className="project-card">
            <img src={dom101Image} alt="–î–û–ú 101" style={{ width: '100%', height: '200px', objectFit: 'cover', borderRadius: '10px', marginBottom: '12px' }} />
            <div className="project-meta">
              <span className="pill">–°—Ç–∞—Ä—Ç –ø—Ä–æ–¥–∞–∂</span>
              <span className="pill pill-sale">‚Äë12%</span>
              <span className="pill pill-available">–≤ –ø—Ä–æ–¥–∞–∂–µ</span>
            </div>
            <h3>–î–û–ú 101</h3>
            <p className="project-location">–≥. –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä, —É–ª–∏—Ü–∞ –î–æ—Ä–æ–∂–Ω–∞—è</p>
            <ul className="project-prices">
              <li><strong>–°—Ç—É–¥–∏–∏</strong> ‚Äî –æ—Ç 3,0 –º–ª–Ω ‚ÇΩ</li>
              <li><strong>1‚Äë–∫</strong> ‚Äî –æ—Ç 4,7 –º–ª–Ω ‚ÇΩ</li>
              <li><strong>3‚Äë–∫</strong> ‚Äî –æ—Ç 7,9 –º–ª–Ω ‚ÇΩ</li>
            </ul>
            <button className="btn btn-secondary" onClick={() => onOpen('dom101')}>–û –ø—Ä–æ–µ–∫—Ç–µ</button>
          </article>
          <article className="project-card">
            <img src={narodnyeKvartalyImage} alt="–ù–∞—Ä–æ–¥–Ω—ã–µ –∫–≤–∞—Ä—Ç–∞–ª—ã" style={{ width: '100%', height: '200px', objectFit: 'cover', borderRadius: '10px', marginBottom: '12px' }} />
            <div className="project-meta">
              <span className="pill">–†–µ–º–æ–Ω—Ç –≤ –ø–æ–¥–∞—Ä–æ–∫</span>
              <span className="pill pill-sale">‚Äë12%</span>
              <span className="pill pill-available">–≤ –ø—Ä–æ–¥–∞–∂–µ</span>
            </div>
            <h3>–ù–∞—Ä–æ–¥–Ω—ã–µ –∫–≤–∞—Ä—Ç–∞–ª—ã</h3>
            <p className="project-location">–≥. –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä, –ø–æ—Å. –ó–Ω–∞–º–µ–Ω—Å–∫–∏–π</p>
            <ul className="project-prices">
              <li><strong>–°—Ç—É–¥–∏–∏</strong> ‚Äî –æ—Ç 3,2 –º–ª–Ω ‚ÇΩ</li>
              <li><strong>1‚Äë–∫</strong> ‚Äî –æ—Ç 4,9 –º–ª–Ω ‚ÇΩ</li>
              <li><strong>2‚Äë–∫</strong> ‚Äî –æ—Ç 6,6 –º–ª–Ω ‚ÇΩ</li>
            </ul>
            <button className="btn btn-secondary" onClick={() => onOpen('narodnye')}>–û –ø—Ä–æ–µ–∫—Ç–µ</button>
          </article>
          <article className="project-card">
            <img src={istoriya2Image} alt="–ò—Å—Ç–æ—Ä–∏—è 2" style={{ width: '100%', height: '200px', objectFit: 'cover', borderRadius: '10px', marginBottom: '12px' }} />
            <div className="project-meta">
              <span className="pill">–î–æ–º–∞ —Å–¥–∞–Ω—ã</span>
              <span className="pill pill-sale">‚Äë12%</span>
              <span className="pill pill-available">–≤ –ø—Ä–æ–¥–∞–∂–µ</span>
            </div>
            <h3>–ò—Å—Ç–æ—Ä–∏—è 2</h3>
            <p className="project-location">–≥. –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä, –ø–æ—Å. –Æ–∂–Ω—ã–π, –ö–∞–∑–∞—á—å—è</p>
            <ul className="project-prices">
              <li><strong>2‚Äë–∫</strong> ‚Äî –æ—Ç 6,2 –º–ª–Ω ‚ÇΩ</li>
            </ul>
            <button className="btn btn-secondary" onClick={() => onOpen('istoriya2')}>–û –ø—Ä–æ–µ–∫—Ç–µ</button>
          </article>
        </div>
      </div>
    </section>
  );
}

function Mortgage({ onOpen }: { onOpen: (id: ModalId) => void }) {
  return (
    <section id="mortgage" className="section mortgage">
      <div className="container">
        <h2>–í–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ–∫—É–ø–∫–∏</h2>
        <div className="cards grid-4">
          <article className="card">
            <h3>–ï–¥–∏–Ω–æ—Ä–∞–∑–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂</h3>
            <p>–ù–∞–¥–µ–∂–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–æ–∫—É–ø–∫–∏ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –≤—ã–≥–æ–¥–æ–π.</p>
            <button className="btn btn-link" onClick={() => onOpen('state')}>–ü–æ–¥—Ä–æ–±–Ω–µ–µ</button>
          </article>
          <article className="card">
            <h3>–ì–æ—Å–ø–æ–¥–¥–µ—Ä–∂–∫–∞</h3>
            <p>–õ—å–≥–æ—Ç–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã, —Å—É–±—Å–∏–¥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞–≤–∫–∏ –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.</p>
            <button className="btn btn-link" onClick={() => onOpen('state')}>–ü–æ–¥—Ä–æ–±–Ω–µ–µ</button>
          </article>
          <article className="card">
            <h3>–°–µ–º–µ–π–Ω–∞—è –∏–ø–æ—Ç–µ–∫–∞</h3>
            <p>–°–µ–º–µ–π–Ω–∞—è –∏–ø–æ—Ç–µ–∫–∞ –∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã –≥–æ—Å–ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Å –≤—ã–≥–æ–¥–æ–π.</p>
            <button className="btn btn-link" onClick={() => onOpen('family')}>–ü–æ–¥—Ä–æ–±–Ω–µ–µ</button>
          </article>
          <article className="card military-card">
            <div className="card-icon">ü™ñ</div>
            <h3>–í–æ–µ–Ω–Ω–∞—è –∏–ø–æ—Ç–µ–∫–∞</h3>
            <div className="military-info">
              <div className="military-features">
                <div className="feature">
                  <span className="feature-label">–°—Ç–∞–≤–∫–∞</span>
                  <span className="feature-value">–æ—Ç 6%</span>
                </div>
                <div className="feature">
                  <span className="feature-label">–ü–í</span>
                  <span className="feature-value">–æ—Ç 30%</span>
                </div>
                <div className="feature">
                  <span className="feature-label">–°—Ä–æ–∫</span>
                  <span className="feature-value">–¥–æ 25 –ª–µ—Ç</span>
                </div>
                <div className="feature">
                  <span className="feature-label">–°—É–º–º–∞</span>
                  <span className="feature-value">–¥–æ 4,975 –º–ª–Ω ‚ÇΩ</span>
                </div>
              </div>
              <p>–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –¥–ª—è –≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–∏—Ö –ø–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—É —Å –ª—å–≥–æ—Ç–Ω—ã–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏.</p>
            </div>
            <button className="btn btn-link" onClick={() => onOpen('military')}>–ü–æ–¥—Ä–æ–±–Ω–µ–µ</button>
          </article>
        </div>
      </div>
    </section>
  );
}


function Footer({ onOpen }: { onOpen: (id: ModalId) => void }) {
  return (
    <footer className="site-footer">
      <div className="container footer-inner">
        <div className="footer-brand">
          <span className="logo-mark">V</span>
          <p>¬© 2015‚Äì2025 –ó–∞—Å—Ç—Ä–æ–π—â–∏–∫ NPM. –ù–µ —è–≤–ª—è–µ—Ç—Å—è –ø—É–±–ª–∏—á–Ω–æ–π –æ—Ñ–µ—Ä—Ç–æ–π.</p>
        </div>
        <ul className="footer-links">
          <li><a href="#projects">–ü—Ä–æ–µ–∫—Ç—ã</a></li>
          <li><a href="#mortgage">–ò–ø–æ—Ç–µ–∫–∞</a></li>
          <li><a href="#promos">–ê–∫—Ü–∏–∏</a></li>
          <li><a href="/policy.html">–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</a></li>
        </ul>
        <div className="footer-contacts">
          <a className="btn btn-outline" href="tel:+79884707893">+7 (988) 470‚Äë78‚Äë93</a>
          <button className="btn btn-secondary" onClick={() => onOpen('consultation')}>–û–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫</button>
        </div>
      </div>
    </footer>
  );
}

function Modal({ modal, onClose, onSubmit, formatRuPhone }: { modal: ModalId | null; onClose: () => void; onSubmit: (e: React.FormEvent<HTMLFormElement>, formType: string) => void; formatRuPhone: (value: string) => string }) {
  if (!modal) return null;

  const modalContent = useMemo(() => {
    switch (modal) {
      case 'promo1':
        return {
          title: '–†–µ–º–æ–Ω—Ç –≤ –ø–æ–¥–∞—Ä–æ–∫ ‚Äî –≤ ¬´–ù–∞—Ä–æ–¥–Ω—ã—Ö –∫–≤–∞—Ä—Ç–∞–ª–∞—Ö¬ª!',
          content: `üéÅ **–†–µ–º–æ–Ω—Ç –≤ –ø–æ–¥–∞—Ä–æ–∫ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ –°–ö –ù–í–ú!**

–°–ø–µ—à–∏–º –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å –±—É–¥—É—â–∏—Ö –∂–∏—Ç–µ–ª–µ–π ‚Äî –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –ª—é–±–æ–π –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ –∂–∏–ª–æ–º —Ä–∞–π–æ–Ω–µ –ñ–ö ¬´–ù–∞—Ä–æ–¥–Ω—ã–µ –∫–≤–∞—Ä—Ç–∞–ª—ã¬ª –¥–æ 30 —Å–µ–Ω—Ç—è–±—Ä—è 2025 –≥–æ–¥–∞ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ —Ä–µ–º–æ–Ω—Ç –≤ –ø–æ–¥–∞—Ä–æ–∫!

‚ú® **–ß—Ç–æ –≤—Ö–æ–¥–∏—Ç –≤ –∞–∫—Ü–∏—é:**
‚Ä¢ –û—Ç–¥–µ–ª–∫–∞ –ø–æ–¥ –∫–ª—é—á ‚Äî –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Ö–ª–æ–ø–æ—Ç
‚Ä¢ –õ—é–±–∞—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∫–∞ ‚Äî –∞–∫—Ü–∏—è –¥–µ–π—Å—Ç–≤—É–µ—Ç –Ω–∞ –≤—Å–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã
‚Ä¢ –õ—é–±–æ–π –≤–∏–¥ —Ä–∞—Å—á–µ—Ç–∞

üè† **–ü—Ä–æ–µ–∫—Ç:**
‚Ä¢ –ñ–ö ¬´–ù–∞—Ä–æ–¥–Ω—ã–µ –∫–≤–∞—Ä—Ç–∞–ª—ã¬ª

üìÖ **–°—Ä–æ–∫–∏ –∞–∫—Ü–∏–∏:** —Å 14.05.2025 –ø–æ 30.09.2025

üìû **–ö–æ–Ω—Ç–∞–∫—Ç—ã:** –° –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø—Ä–∞–≤–∏–ª–∞—Ö –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –∞–∫—Ü–∏–∏ –º–æ–∂–Ω–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +7(988)470-78-93

–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä –∞–∫—Ü–∏–∏:
–û–û–û –°–ó ¬´–ì–†–ê–î–°–¢–†–û–ô–ü–†–û–ï–ö–¢¬ª. –ò–ù–ù 2311311443. –û–ì–†–ù1202300058586. –ü—Ä–æ–µ–∫—Ç–Ω–∞—è –¥–µ–∫–ª–∞—Ä–∞—Ü–∏—è –Ω–∞ —Å–∞–π—Ç–µ –Ω–∞—à.–¥–æ–º.—Ä—Ñ.

–û–û–û –°–ó ¬´–°–ö –¢–µ—Ö—é–≥—Å—Ç—Ä–æ–π¬ª, –ò–ù–ù: 2311340860, –û–ì–†–ù:1222300057760 –ü—Ä–æ–µ–∫—Ç–Ω–∞—è –¥–µ–∫–ª–∞—Ä–∞—Ü–∏—è –Ω–∞ —Å–∞–π—Ç–µ –Ω–∞—à.–¥–æ–º.—Ä—Ñ.`
        };
      case 'promo2':
        return {
          title: '–†–µ–º–æ–Ω—Ç + –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞ –º–µ–±–µ–ª—å –≤ –ø–æ–¥–∞—Ä–æ–∫',
          content: `üéÅ **–†–µ–º–æ–Ω—Ç + –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞ –º–µ–±–µ–ª—å –≤ –ø–æ–¥–∞—Ä–æ–∫**

–ü—Ä–∏ –ø–æ–∫—É–ø–∫–µ –ª—é–±–æ–π –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ –∂–∏–ª–æ–º —Ä–∞–π–æ–Ω–µ –ñ–ö ¬´–ù–∞—Ä–æ–¥–Ω—ã–µ –∫–≤–∞—Ä—Ç–∞–ª—ã¬ª –¥–æ 30 —Å–µ–Ω—Ç—è–±—Ä—è 2025 –≥–æ–¥–∞ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ —Ä–µ–º–æ–Ω—Ç –∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞ –º–µ–±–µ–ª—å –≤ –ø–æ–¥–∞—Ä–æ–∫!

‚ú® **–ß—Ç–æ –≤—Ö–æ–¥–∏—Ç –≤ –∞–∫—Ü–∏—é:**
‚Ä¢ –û—Ç–¥–µ–ª–∫–∞ –ø–æ–¥ –∫–ª—é—á ‚Äî –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Ö–ª–æ–ø–æ—Ç
‚Ä¢ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞ –º–µ–±–µ–ª—å –≤ –ø–æ–¥–∞—Ä–æ–∫
‚Ä¢ –õ—é–±–∞—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∫–∞ ‚Äî –∞–∫—Ü–∏—è –¥–µ–π—Å—Ç–≤—É–µ—Ç –Ω–∞ –≤—Å–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã
‚Ä¢ –õ—é–±–æ–π –≤–∏–¥ —Ä–∞—Å—á–µ—Ç–∞

üè† **–ü—Ä–æ–µ–∫—Ç:**
‚Ä¢ –ñ–ö ¬´–ù–∞—Ä–æ–¥–Ω—ã–µ –∫–≤–∞—Ä—Ç–∞–ª—ã¬ª

üìÖ **–°—Ä–æ–∫–∏ –∞–∫—Ü–∏–∏:** —Å 14.05.2025 –ø–æ 30.09.2025

üìû **–ö–æ–Ω—Ç–∞–∫—Ç—ã:** –° –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø—Ä–∞–≤–∏–ª–∞—Ö –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –∞–∫—Ü–∏–∏ –º–æ–∂–Ω–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +7(988)470-78-93

‚è∞ **–û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è –∞–∫—Ü–∏–∏!**
–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–≤–∞—Ä—Ç–∏—Ä –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º —Ü–µ–Ω–∞–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ.`
        };
      case 'promo3':
        return {
          title: '–°–µ–º–µ–π–Ω–∞—è –∏–ø–æ—Ç–µ–∫–∞',
          content: `üë®‚Äçüë©‚Äçüëß‚Äçüë¶ **–°–µ–º–µ–π–Ω–∞—è –∏–ø–æ—Ç–µ–∫–∞ - –≤—ã–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è**

–õ—å–≥–æ—Ç–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –¥–ª—è —Å–µ–º–µ–π —Å –¥–µ—Ç—å–º–∏ –æ—Ç –≤–µ–¥—É—â–∏—Ö –±–∞–Ω–∫–æ–≤ –†–æ—Å—Å–∏–∏.

üìã **–û—Å–Ω–æ–≤–Ω—ã–µ —É—Å–ª–æ–≤–∏—è:**
‚Ä¢ –°—Ç–∞–≤–∫–∞ –æ—Ç 6% –≥–æ–¥–æ–≤—ã—Ö
‚Ä¢ –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π –≤–∑–Ω–æ—Å –æ—Ç 20%
‚Ä¢ –°—Ä–æ–∫ –∫—Ä–µ–¥–∏—Ç–∞ –¥–æ 30 –ª–µ—Ç
‚Ä¢ –°—É–º–º–∞ –∫—Ä–µ–¥–∏—Ç–∞ –¥–æ 15 –º–ª–Ω ‚ÇΩ

üéÅ **–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:**
‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–Ω—Å–∫–æ–≥–æ –∫–∞–ø–∏—Ç–∞–ª–∞
‚Ä¢ –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å—É–±—Å–∏–¥–∏–∏
‚Ä¢ –°–Ω–∏–∂–µ–Ω–∏–µ —Å—Ç–∞–≤–∫–∏ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –¥–µ—Ç–µ–π
‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è —Å–æ–∑–∞–µ–º—â–∏–∫–æ–≤

üë∂ **–î–ª—è –∫–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∏—Ç:**
‚Ä¢ –°–µ–º—å–∏ —Å –¥–µ—Ç—å–º–∏ –¥–æ 6 –ª–µ—Ç
‚Ä¢ –ú–Ω–æ–≥–æ–¥–µ—Ç–Ω—ã–µ —Å–µ–º—å–∏
‚Ä¢ –°–µ–º—å–∏ —Å –¥–µ—Ç—å–º–∏-–∏–Ω–≤–∞–ª–∏–¥–∞–º–∏

üìû –ü–æ–ª—É—á–∏—Ç–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +7(861)211-28-50`
        };
      case 'state':
        return {
          title: '–ì–æ—Å–ø–æ–¥–¥–µ—Ä–∂–∫–∞',
          content: `üèõÔ∏è **–ü—Ä–æ–≥—Ä–∞–º–º—ã –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏**

–†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ –ª—å–≥–æ—Ç–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º –æ—Ç –≤–µ–¥—É—â–∏—Ö –±–∞–Ω–∫–æ–≤ –†–æ—Å—Å–∏–∏.

üìä **–û–±—â–∏–µ —É—Å–ª–æ–≤–∏—è:**
‚Ä¢ –ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞ –æ—Ç 6%
‚Ä¢ –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π –≤–∑–Ω–æ—Å –æ—Ç 20,01%
‚Ä¢ –°—Ä–æ–∫ –∫—Ä–µ–¥–∏—Ç–∞ –æ—Ç 1 –≥–æ–¥–∞ –¥–æ 30 –ª–µ—Ç
‚Ä¢ –°—É–º–º–∞ –∫—Ä–µ–¥–∏—Ç–∞ –æ—Ç 500,000 ‚ÇΩ –¥–æ 15 –º–ª–Ω ‚ÇΩ

üéØ **–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:**
‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å—É–±—Å–∏–¥–∏–π –ø–æ –∏–ø–æ—Ç–µ–∫–µ
‚Ä¢ –ú–∞—Ç–µ—Ä–∏–Ω—Å–∫–∏–π –∫–∞–ø–∏—Ç–∞–ª
‚Ä¢ –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏
‚Ä¢ –û–¥–Ω–∞ –∞–Ω–∫–µ—Ç–∞ –¥–ª—è –ø–æ–¥–∞—á–∏ –≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ –±–∞–Ω–∫–æ–≤

üìã **–ü—Ä–æ—Ü–µ—Å—Å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è:**
1. –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å –∏–ø–æ—Ç–µ—á–Ω—ã–º –±—Ä–æ–∫–µ—Ä–æ–º
2. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∫ —Å–¥–µ–ª–∫–µ
3. –ü–æ–¥–ø–∏—Å–∞–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–Ω–æ–≥–æ –¥–æ–≥–æ–≤–æ—Ä–∞
4. –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Å–¥–µ–ª–∫–∏

üìû –ü–æ–¥—Ä–æ–±–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è: +7(861)211-28-50`
        };
      case 'family':
        return {
          title: '–°–µ–º–µ–π–Ω–∞—è –∏–ø–æ—Ç–µ–∫–∞',
          content: `üë®‚Äçüë©‚Äçüëß‚Äçüë¶ **–°–µ–º–µ–π–Ω–∞—è –∏–ø–æ—Ç–µ–∫–∞ - –ø–æ–¥—Ä–æ–±–Ω—ã–µ —É—Å–ª–æ–≤–∏—è**

–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –¥–ª—è —Å–µ–º–µ–π —Å –¥–µ—Ç—å–º–∏.

üí∞ **–û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:**
‚Ä¢ –°—Ç–∞–≤–∫–∞ –æ—Ç 6% –≥–æ–¥–æ–≤—ã—Ö
‚Ä¢ –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π –≤–∑–Ω–æ—Å –æ—Ç 20%
‚Ä¢ –°—Ä–æ–∫ –∫—Ä–µ–¥–∏—Ç–∞ –¥–æ 30 –ª–µ—Ç
‚Ä¢ –°—É–º–º–∞ –∫—Ä–µ–¥–∏—Ç–∞ –¥–æ 15 –º–ª–Ω ‚ÇΩ

üéÅ **–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**
‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–Ω—Å–∫–æ–≥–æ –∫–∞–ø–∏—Ç–∞–ª–∞
‚Ä¢ –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å—É–±—Å–∏–¥–∏–∏ –¥–æ 2,5%
‚Ä¢ –°–Ω–∏–∂–µ–Ω–∏–µ —Å—Ç–∞–≤–∫–∏ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –¥–µ—Ç–µ–π
‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è —Å–æ–∑–∞–µ–º—â–∏–∫–æ–≤

üë∂ **–£—Å–ª–æ–≤–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è:**
‚Ä¢ –í —Å–µ–º—å–µ –µ—Å—Ç—å —Ä–µ–±—ë–Ω–æ–∫ –º–ª–∞–¥—à–µ 7 –ª–µ—Ç
‚Ä¢ –î–≤–∞ –∏–ª–∏ –±–æ–ª–µ–µ —Ä–µ–±—ë–Ω–∫–∞ –º–ª–∞–¥—à–µ 18 –ª–µ—Ç
‚Ä¢ –†–µ–±—ë–Ω–æ–∫ —Å –æ—Å–æ–±—ã–º–∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—è–º–∏ –¥–æ 18 –ª–µ—Ç

üìã **–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –∑–∞—ë–º—â–∏–∫—É:**
‚Ä¢ –ì—Ä–∞–∂–¥–∞–Ω–∏–Ω –†–§
‚Ä¢ –í–æ–∑—Ä–∞—Å—Ç –æ—Ç 21 –¥–æ 70 –ª–µ—Ç
‚Ä¢ –°—Ç–∞–∂ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–º –º–µ—Å—Ç–µ —Ä–∞–±–æ—Ç—ã –æ—Ç 3 –º–µ—Å—è—Ü–µ–≤
‚Ä¢ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ –†–§

üìû –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ: +7(861)211-28-50`
        };
      case 'military':
        return {
          title: '–í–æ–µ–Ω–Ω–∞—è –∏–ø–æ—Ç–µ–∫–∞',
          content: `ü™ñ **–°–µ–º–µ–π–Ω–∞—è –≤–æ–µ–Ω–Ω–∞—è –∏–ø–æ—Ç–µ–∫–∞ - –ø–æ–¥—Ä–æ–±–Ω—ã–µ —É—Å–ª–æ–≤–∏—è**

–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –∏–ø–æ—Ç–µ—á–Ω–æ–≥–æ –∫—Ä–µ–¥–∏—Ç–æ–≤–∞–Ω–∏—è –¥–ª—è –≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–∏—Ö –ø–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—É.

üí∞ **–û—Å–Ω–æ–≤–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –∫—Ä–µ–¥–∏—Ç–æ–≤–∞–Ω–∏—è:**
‚Ä¢ –ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞: –æ—Ç 6% –≥–æ–¥–æ–≤—ã—Ö
‚Ä¢ –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π –≤–∑–Ω–æ—Å: –æ—Ç 30% –¥–æ 90%
‚Ä¢ –°—Ä–æ–∫ –∫—Ä–µ–¥–∏—Ç–∞: –æ—Ç 12 –º–µ—Å—è—Ü–µ–≤ –¥–æ 25 –ª–µ—Ç
‚Ä¢ –°—É–º–º–∞ –∫—Ä–µ–¥–∏—Ç–∞: –¥–æ 4,975,000 ‚ÇΩ
‚Ä¢ –ü–æ–ª–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫—Ä–µ–¥–∏—Ç–∞: 5,995% - 6,166%

üéØ **–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –¥–ª—è –≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–∏—Ö:**
‚Ä¢ –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ª—å–≥–æ—Ç–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –∫—Ä–µ–¥–∏—Ç–æ–≤–∞–Ω–∏—è
‚Ä¢ –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –ø—Ä–æ—Ü–µ–¥—É—Ä–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
‚Ä¢ –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ —Å—É–±—Å–∏–¥–∏—Ä–æ–≤–∞–Ω–∏–µ
‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω–æ-–∏–ø–æ—Ç–µ—á–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã (–ù–ò–°)
‚Ä¢ –°–Ω–∏–∂–µ–Ω–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –¥–æ—Ö–æ–¥—É
‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ—Å—Ä–æ—á–Ω–æ–≥–æ –ø–æ–≥–∞—à–µ–Ω–∏—è –±–µ–∑ —à—Ç—Ä–∞—Ñ–æ–≤

üìã **–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –∑–∞—ë–º—â–∏–∫—É:**
‚Ä¢ –í–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–∏–π –ø–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—É –≤ –í–° –†–§
‚Ä¢ –í–æ–∑—Ä–∞—Å—Ç –æ—Ç 21 –≥–æ–¥–∞ –¥–æ 70 –ª–µ—Ç
‚Ä¢ –°—Ç–∞–∂ –≤–æ–µ–Ω–Ω–æ–π —Å–ª—É–∂–±—ã –æ—Ç 3 –º–µ—Å—è—Ü–µ–≤
‚Ä¢ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ –º–µ—Å—Ç—É –∂–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –≤ –†–§
‚Ä¢ –ù–∞–ª–∏—á–∏–µ —Ä–æ—Å—Å–∏–π—Å–∫–æ–≥–æ –≥—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–∞
‚Ä¢ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–π –¥–æ—Ö–æ–¥ –æ—Ç –≤–æ–µ–Ω–Ω–æ–π —Å–ª—É–∂–±—ã

üè† **–ü—Ä–æ—Ü–µ—Å—Å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –≤–æ–µ–Ω–Ω–æ–π –∏–ø–æ—Ç–µ–∫–∏:**
1. **–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è** - –Ω–∞—à –∏–ø–æ—Ç–µ—á–Ω—ã–π –±—Ä–æ–∫–µ—Ä –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–µ—Ç –ø–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º
2. **–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤** - —Å–±–æ—Ä —Å–ø—Ä–∞–≤–æ–∫ –∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∫ —Å–¥–µ–ª–∫–µ
3. **–ü–æ–¥–∞—á–∞ –∑–∞—è–≤–∫–∏** - –ø–æ–¥–∞—á–∞ –∑–∞—è–≤–∫–∏ –≤ –±–∞–Ω–∫-–ø–∞—Ä—Ç–Ω–µ—Ä
4. **–û–¥–æ–±—Ä–µ–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–∞** - –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–¥–æ–±—Ä–µ–Ω–∏—è
5. **–ü–æ–¥–ø–∏—Å–∞–Ω–∏–µ –¥–æ–≥–æ–≤–æ—Ä–∞** - –∑–∞–∫–ª—é—á–µ–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–Ω–æ–≥–æ –¥–æ–≥–æ–≤–æ—Ä–∞
6. **–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Å–¥–µ–ª–∫–∏** - —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–¥–µ–ª–∫–∏ –∫—É–ø–ª–∏-–ø—Ä–æ–¥–∞–∂–∏

üìÑ **–ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã:**
‚Ä¢ –í–æ–µ–Ω–Ω—ã–π –±–∏–ª–µ—Ç –∏–ª–∏ —É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏–µ –ª–∏—á–Ω–æ—Å—Ç–∏ –≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–µ–≥–æ
‚Ä¢ –°–ø—Ä–∞–≤–∫–∞ –æ –¥–æ—Ö–æ–¥–∞—Ö –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 6 –º–µ—Å—è—Ü–µ–≤
‚Ä¢ –¢—Ä—É–¥–æ–≤–∞—è –∫–Ω–∏–∂–∫–∞ –∏–ª–∏ –≤—ã–ø–∏—Å–∫–∞ –∏–∑ –ª–∏—á–Ω–æ–≥–æ –¥–µ–ª–∞
‚Ä¢ –î–æ–∫—É–º–µ–Ω—Ç—ã –Ω–∞ –ø—Ä–∏–æ–±—Ä–µ—Ç–∞–µ–º—É—é –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å
‚Ä¢ –°–ø—Ä–∞–≤–∫–∞ –æ —Å–æ—Å—Ç–∞–≤–µ —Å–µ–º—å–∏
‚Ä¢ –î–æ–∫—É–º–µ–Ω—Ç—ã –æ —Å–µ–º–µ–π–Ω–æ–º –ø–æ–ª–æ–∂–µ–Ω–∏–∏

‚ö° **–°—Ä–æ–∫–∏ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è:**
‚Ä¢ –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–µ –æ–¥–æ–±—Ä–µ–Ω–∏–µ: 1-2 —Ä–∞–±–æ—á–∏—Ö –¥–Ω—è
‚Ä¢ –ü–æ–ª–Ω–æ–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ: 3-5 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π
‚Ä¢ –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Å–¥–µ–ª–∫–∏: 5-10 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π

üéÅ **–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**
‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–Ω—Å–∫–æ–≥–æ –∫–∞–ø–∏—Ç–∞–ª–∞
‚Ä¢ –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å—É–±—Å–∏–¥–∏–∏ –Ω–∞ –∂–∏–ª—å–µ
‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–µ—Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏—è
‚Ä¢ –°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ –∂–∏–∑–Ω–∏ –∏ –∑–¥–æ—Ä–æ–≤—å—è –Ω–∞ –ª—å–≥–æ—Ç–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö
‚Ä¢ –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–∞ –≤—Å–µ—Ö —ç—Ç–∞–ø–∞—Ö

üìû **–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ:**
–ü–æ–ª—É—á–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +7(861)211-28-50
–ù–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –æ—Ç–≤–µ—Ç–∏—Ç –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –ø–æ–º–æ–∂–µ—Ç –æ—Ñ–æ—Ä–º–∏—Ç—å –≤–æ–µ–Ω–Ω—É—é –∏–ø–æ—Ç–µ–∫—É.`
        };
      case 'consultation':
        return {
          title: '–ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é',
          content: '–û—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ, –∏ –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏.'
        };
      case 'dom101':
        return {
          title: '–ñ–ö "–î–û–ú 101"',
          content: `–ñ–ö "–î–û–ú 101" ‚Äî —ç—Ç–æ —ç–∫–æ—Å–∏—Å—Ç–µ–º–∞ –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ 101 –≥–∞ —Å —Ä–∞–∑–≤–∏—Ç–æ–π –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π.

üìç –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ: –≥. –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä, —É–ª–∏—Ü–∞ –î–æ—Ä–æ–∂–Ω–∞—è

üè¢ –ü–ª–∞–Ω–∏—Ä–æ–≤–∫–∏:
‚Ä¢ –°—Ç—É–¥–∏–∏ –æ—Ç 22,56 –º¬≤ ‚Äî –æ—Ç 3,8 –º–ª–Ω ‚ÇΩ
‚Ä¢ 1-–∫–æ–º–Ω–∞—Ç–Ω—ã–µ –æ—Ç 33,30 –º¬≤ ‚Äî –æ—Ç 4,3 –º–ª–Ω ‚ÇΩ  
‚Ä¢ 2-–∫–æ–º–Ω–∞—Ç–Ω—ã–µ –æ—Ç 48,80 –º¬≤ ‚Äî –æ—Ç 5,4 –º–ª–Ω ‚ÇΩ
‚Ä¢ 3-–∫–æ–º–Ω–∞—Ç–Ω—ã–µ –æ—Ç 77,46 –º¬≤ ‚Äî –æ—Ç 8,1 –º–ª–Ω ‚ÇΩ

üéØ –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
‚Ä¢ –õ–∞–Ω–¥—à–∞—Ñ—Ç–Ω—ã–π –ø–∞—Ä–∫ 20 –≥–∞
‚Ä¢ –°–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ –∫–æ–ª–µ—Å–æ –æ–±–æ–∑—Ä–µ–Ω–∏—è
‚Ä¢ –®–∫–æ–ª–∞ –Ω–∞ 1,725 –º–µ—Å—Ç
‚Ä¢ 5 –¥–µ—Ç—Å–∫–∏—Ö —Å–∞–¥–æ–≤ –ø–æ 310-350 –º–µ—Å—Ç
‚Ä¢ –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –ø–ª–æ—â–∞–¥–∫–∏
‚Ä¢ –†–∞–∑–≤–∏—Ç–∞—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–∞—è —Å–µ—Ç—å

üí≥ –í–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ–∫—É–ø–∫–∏:
‚Ä¢ –ï–¥–∏–Ω–æ—Ä–∞–∑–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂
‚Ä¢ –†–∞—Å—Å—Ä–æ—á–∫–∞ 0%
‚Ä¢ –ú–∞—Ç–µ—Ä–∏–Ω—Å–∫–∏–π –∫–∞–ø–∏—Ç–∞–ª
‚Ä¢ –ò–ø–æ—Ç–µ–∫–∞ –æ—Ç 5,99% –≥–æ–¥–æ–≤—ã—Ö

–°—Ç–∞—Ä—Ç –ø—Ä–æ–¥–∞–∂ ‚Äî —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –¥–ª—è –ø–µ—Ä–≤—ã—Ö –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π!`
        };
      case 'narodnye':
        return {
          title: '–ñ–ö "–ù–∞—Ä–æ–¥–Ω—ã–µ –∫–≤–∞—Ä—Ç–∞–ª—ã"',
          content: `–ñ–ö "–ù–∞—Ä–æ–¥–Ω—ã–µ –∫–≤–∞—Ä—Ç–∞–ª—ã" ‚Äî —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∂–∏–ª–æ–π –∫–æ–º–ø–ª–µ–∫—Å —Å —Ä–∞–∑–≤–∏—Ç–æ–π –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π.

üìç –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ: –≥. –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä, –ø–æ—Å. –ó–Ω–∞–º–µ–Ω—Å–∫–∏–π

üè¢ –ü–ª–∞–Ω–∏—Ä–æ–≤–∫–∏:
‚Ä¢ 1-–∫–æ–º–Ω–∞—Ç–Ω—ã–µ –æ—Ç 3,9 –º–ª–Ω ‚ÇΩ
‚Ä¢ 2-–∫–æ–º–Ω–∞—Ç–Ω—ã–µ –æ—Ç 6,6 –º–ª–Ω ‚ÇΩ

üéØ –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
‚Ä¢ –†–µ–º–æ–Ω—Ç –≤ –ø–æ–¥–∞—Ä–æ–∫ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ
‚Ä¢ –°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞
‚Ä¢ –ë–ª–∞–≥–æ—É—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –¥–≤–æ—Ä—ã
‚Ä¢ –î–µ—Ç—Å–∫–∏–µ –ø–ª–æ—â–∞–¥–∫–∏
‚Ä¢ –ü–∞—Ä–∫–æ–≤–æ—á–Ω—ã–µ –º–µ—Å—Ç–∞
‚Ä¢ –†–∞–∑–≤–∏—Ç–∞—è –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞

üí≥ –í–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ–∫—É–ø–∫–∏:
‚Ä¢ –ï–¥–∏–Ω–æ—Ä–∞–∑–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂ —Å–æ —Å–∫–∏–¥–∫–æ–π
‚Ä¢ –†–∞—Å—Å—Ä–æ—á–∫–∞ –æ—Ç –∑–∞—Å—Ç—Ä–æ–π—â–∏–∫–∞
‚Ä¢ –ò–ø–æ—Ç–µ–∫–∞ —Å –≥–æ—Å–ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
‚Ä¢ –ú–∞—Ç–µ—Ä–∏–Ω—Å–∫–∏–π –∫–∞–ø–∏—Ç–∞–ª

–ê–∫—Ü–∏—è "–†–µ–º–æ–Ω—Ç –≤ –ø–æ–¥–∞—Ä–æ–∫" ‚Äî –Ω–µ —É–ø—É—Å—Ç–∏—Ç–µ –≤—ã–≥–æ–¥–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ!`
        };
      case 'istoriya2':
        return {
          title: '–ñ–ö "–ò—Å—Ç–æ—Ä–∏—è 2"',
          content: `–ñ–ö "–ò—Å—Ç–æ—Ä–∏—è 2" ‚Äî –≥–æ—Ç–æ–≤—ã–µ –¥–æ–º–∞ –≤ —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏ —á–∏—Å—Ç–æ–º —Ä–∞–π–æ–Ω–µ.

üìç –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ: –≥. –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä, –ø–æ—Å. –Æ–∂–Ω—ã–π, –ö–∞–∑–∞—á—å—è

üè¢ –ü–ª–∞–Ω–∏—Ä–æ–≤–∫–∏:
‚Ä¢ 2-–∫–æ–º–Ω–∞—Ç–Ω—ã–µ –æ—Ç 6,2 –º–ª–Ω ‚ÇΩ

üéØ –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
‚Ä¢ –î–æ–º–∞ —É–∂–µ —Å–¥–∞–Ω—ã –∏ –≥–æ—Ç–æ–≤—ã –∫ –∑–∞—Å–µ–ª–µ–Ω–∏—é
‚Ä¢ –≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏ —á–∏—Å—Ç–∞—è –∑–æ–Ω–∞
‚Ä¢ –¢–∏—Ö–∏–π —Ä–∞–π–æ–Ω —Å —Ö–æ—Ä–æ—à–µ–π —ç–∫–æ–ª–æ–≥–∏–µ–π
‚Ä¢ –ë–ª–∞–≥–æ—É—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è
‚Ä¢ –î–µ—Ç—Å–∫–∏–µ –ø–ª–æ—â–∞–¥–∫–∏
‚Ä¢ –ü–∞—Ä–∫–æ–≤–æ—á–Ω—ã–µ –º–µ—Å—Ç–∞

üí≥ –í–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ–∫—É–ø–∫–∏:
‚Ä¢ –ï–¥–∏–Ω–æ—Ä–∞–∑–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂
‚Ä¢ –†–∞—Å—Å—Ä–æ—á–∫–∞ –æ—Ç –∑–∞—Å—Ç—Ä–æ–π—â–∏–∫–∞
‚Ä¢ –ò–ø–æ—Ç–µ–∫–∞ —Å –≤—ã–≥–æ–¥–Ω—ã–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏
‚Ä¢ –ú–∞—Ç–µ—Ä–∏–Ω—Å–∫–∏–π –∫–∞–ø–∏—Ç–∞–ª

–ì–æ—Ç–æ–≤—ã–µ –¥–æ–º–∞ ‚Äî –∑–∞—Å–µ–ª—è–π—Ç–µ—Å—å —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏!`
        };
      default:
        return { title: '', content: '' };
    }
  }, [modal]);

  const showForm = modal === 'consultation';

  return (
    <div className="modal-backdrop" onClick={onClose}>
      <div className="modal-dialog" onClick={(e) => e.stopPropagation()}>
        <button className="modal-close" onClick={onClose}>√ó</button>
        <h2>{modalContent.title}</h2>
        <div className="modal-content" style={{ whiteSpace: 'pre-line', marginBottom: showForm ? '20px' : '0' }}>
          {modalContent.content}
        </div>
        {showForm && (
          <form onSubmit={(e) => onSubmit(e, modal)}>
            <input
              type="text"
              name="name"
              placeholder="–í–∞—à–µ –∏–º—è"
              required
              className="form-input"
              onChange={(e) => {
                e.target.value = formatName(e.target.value);
              }}
            />
            <input
              type="tel"
              name="phone"
              placeholder="+7(___)___-__-__"
              required
              className="form-input"
              onChange={(e) => {
                e.target.value = formatRuPhone(e.target.value);
              }}
            />
            <button type="submit" className="btn btn-primary btn-large">
              –û—Ç–ø—Ä–∞–≤–∏—Ç—å
            </button>
          </form>
        )}
      </div>
    </div>
  );
}

function Toast({ message }: { message: string | null }) {
  if (!message) return null;
  return <div className="toast">{message}</div>;
}

// Utility function for name formatting
export const formatName = (value: string) => {
  // Remove all non-letter characters (keeping spaces, hyphens, apostrophes for compound names)
  let formatted = value.replace(/[^a-zA-Z–∞-—è–ê-–Ø—ë–Å\s\-']/g, '');
  // Remove multiple spaces
  formatted = formatted.replace(/\s+/g, ' ');
  return formatted;
};

export default App;
